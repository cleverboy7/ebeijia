package com.ebeijia.controller.action.role;


import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.ebeijia.tools.Validate4J;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ebeijia.ajax.resp.AjaxResp;
import com.ebeijia.annotation.MyLog;
import com.ebeijia.entity.TblRoleInf;
import com.ebeijia.service.roleInf.RoleInfService;
import com.ebeijia.util.Constant;

@Controller
@RequestMapping(value="/wechat/role")
public class RoleUpdAction {
	
	@Autowired
	private RoleInfService roleInfService;
	
	private static Logger logger = LoggerFactory.getLogger(RoleUpdAction.class);
	
	@RequestMapping(value="upd.html",method = RequestMethod.POST)
	@ResponseBody
	@MyLog(remark="角色修改")
	public Map<String, Object> upd(HttpSession session,HttpServletRequest request) {
		Map<String, Object> map = new HashMap<String, Object>();
		String roleList =request.getParameter("roleList");
		String roleId=request.getParameter("roleId");
		String name =request.getParameter("name");
		String dsc =request.getParameter("dsc");
		String[][] s = { { dsc, "0", "64" } ,{ name, "1", "32" },{ roleList, "5", null }};
		if (!Validate4J.checkStrArrLen(s)) {
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "参数长度或格式不正确", "");
			return map;
		}
		TblRoleInf tblRoleInf =roleInfService.getById(roleId);
		if(tblRoleInf == null){
			map = AjaxResp.getReturn(Constant.ERROR_CODE,"该角色不存在", "");
			return map;
		}
		tblRoleInf.setRoleName(name);
		tblRoleInf.setDsc(dsc);
		try{
			roleInfService.update(tblRoleInf,roleList);
			map = AjaxResp.getReturn(Constant.SUCCESS_CODE, "", "");
			return map;
		}catch (Exception e) {
			logger.info("修改角色失败");
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "修改角色失败,请联系管理员或稍后再试", "");
			return map;
		}
	}

	@RequestMapping(value="del.html",method = RequestMethod.POST)
	@ResponseBody
	@MyLog(remark="角色删除")
	public Map<String, Object> del(HttpSession session,HttpServletRequest request) {
		String roleId = request.getParameter("roleId");
		String[][] s = {{ roleId, "1", "6" }};
		Map<String, Object> map = new HashMap<String, Object>();
		if (!Validate4J.checkStrArrLen(s)) {
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "角色id格式不正确", "");
			return map;
		}
		try{
			TblRoleInf tblRoleInf =roleInfService.getById(roleId);
			if(tblRoleInf ==null){
				map = AjaxResp.getReturn(Constant.ERROR_CODE, "该角色不存在", "");
				return map;
			}else{
				roleInfService.delById(tblRoleInf.getRoleId());
				map = AjaxResp.getReturn(Constant.SUCCESS_CODE, "", "");
				return map;
			}
		}catch (Exception e) {
			logger.info("删除角色失败");
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "删除角色失败,请联系管理员或稍后再试", "");
			return map;
		}
	}
}
