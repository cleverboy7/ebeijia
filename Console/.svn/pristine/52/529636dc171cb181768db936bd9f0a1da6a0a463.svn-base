package com.ebeijia.service.wechat.inter;


import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ebeijia.entity.vo.wechat.Group;
import com.ebeijia.service.wechat.core.WechatTokenService;
import com.ebeijia.util.wechat.WechatUtil;

/** 
 * 分组管理器类 
 * @author zhicheng.xu
 * @date 2015-02-02
 */  
@Service("TemplateManager")
public class TemplateManagerImpl implements TemplateManager{  
  
	@Autowired
	private WechatTokenService wechatTokenService;
	
    /** 
     * 创建分组 
     * @param group 分组名称 
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
    public JSONObject set(String id1, String id2, String accessToken) {  
        // 拼装创建分组的url  
        String url = WechatUtil.TEMPLATE_SET.replace("ACCESS_TOKEN", accessToken);  
        // 调用接口创建分组  
        String jsonId ="{\"industry_id1\":\""+id1+"\",\"industry_id\":\""+id2+"\"}";
        JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", jsonId);  
        return jsonObject;  
    }  
    
    /** 
     * 修改分组 
     * @param Group 分组实例 
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
	public JSONObject add(Group group,String accessToken) {
	    String url = WechatUtil.TEMPLATE_ADD.replace("ACCESS_TOKEN", accessToken);
        String jsonGroup = "{\"group\":"+JSONObject.fromObject(group).toString()+"}";
	    JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", jsonGroup);
        return jsonObject;  
	}
	 /** 
     * 删除分组 
     * @param Group 分组实例 
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
	public JSONObject send(String groupId,String accessToken) {
	    String url = WechatUtil.TEMPLATE_SEND.replace("ACCESS_TOKEN", accessToken);
        String jsonGroup = "{\"group\":{\"id\":"+groupId+"}}";
	    JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", jsonGroup);
        return jsonObject;  
	}
}  
