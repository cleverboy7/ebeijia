package com.ebeijia.controller.action.wechat.menu;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.ebeijia.tools.DateTime4J;
import org.ebeijia.tools.Validate4J;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ebeijia.ajax.resp.AjaxResp;
import com.ebeijia.annotation.MyLog;
import com.ebeijia.entity.wechat.TblWechatMenu;
import com.ebeijia.service.wechat.menu.WechatMenuService;
import com.ebeijia.util.Constant;

@Controller
@RequestMapping(value="/wechat/menu")
public class WechatMenuAddAction {
	@Autowired
	private WechatMenuService wechatMenuService;
	
	private static Logger logger = LoggerFactory.getLogger(WechatMenuAddAction.class);
	
	@RequestMapping(value="add.html",method = RequestMethod.POST)
	@MyLog(remark="微信菜单新增")
	@ResponseBody
	public Map<String, Object> add(HttpSession session,HttpServletRequest request) {
		TblWechatMenu tblWechatMenu = this.build(request);
		Map<String, Object> map = new HashMap<String, Object>();
		if(tblWechatMenu == null){
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "参数长度或格式不正确", "");
			return map;
		}
		try{
			wechatMenuService.save(tblWechatMenu);
			map = AjaxResp.getReturn(Constant.SUCCESS_CODE, "", "");
			return map;
		}catch(Exception e){
			logger.info("新增微信菜单失败");
			map = AjaxResp.getReturn(Constant.ERROR_CODE, "新增微信菜单失败", "");
			return map;
		}
	}
	
	//验证菜单key值不能重复
	@RequestMapping(value = "wechatMenuAddCheck.html",method = RequestMethod.POST)
	public @ResponseBody Map<String, Object> wechatMenuAddCheck(HttpSession session,HttpServletRequest request) {
		Map<String, Object> map = new LinkedHashMap<String, Object>();
		String menuKey = request.getParameter("menuKey");
		String mchtId = request.getParameter("mchtId");
		List<TblWechatMenu> tblWechatMenu = wechatMenuService.findByHql(menuKey, mchtId);
		if (!tblWechatMenu.isEmpty()){
			map.put("info", "yes");
		}else{
			map.put("info", "no");
		}
		return map;
	}
	
	//绑定实体类
	private TblWechatMenu build(HttpServletRequest request){
		String mchtId=request.getParameter("mchtId");
		String orderNo=request.getParameter("orderNo");
		String menuName=request.getParameter("menuName");
		String parentId=request.getParameter("parentId");
		String type=request.getParameter("type");
		String menuKey=request.getParameter("menuKey");
		String url=request.getParameter("url");
		String groupId=request.getParameter("groupId");
		String[][] s = { { mchtId, "15", "15" } ,{ orderNo, "1", "4" },{ menuName, "1", "40" },
				{ parentId, "1", "10" },{ type, "1", "1" },{ groupId, "1", "3" },{ url, "0", "256" }
				,{ menuKey, "0", "128" }};
		if (!Validate4J.checkStrArrLen(s)) {
			return null;
		}
		TblWechatMenu tblWechatMenu=new TblWechatMenu();
		tblWechatMenu.setMchtId(mchtId);
		tblWechatMenu.setMenuId(wechatMenuService.getMenuId());
		tblWechatMenu.setOrderNo(orderNo);
		tblWechatMenu.setMenuName(menuName);
		tblWechatMenu.setParentId(parentId);
		tblWechatMenu.setGroupId(groupId);
		tblWechatMenu.setType(type);
		tblWechatMenu.setMenuKey(menuKey);
		tblWechatMenu.setUrl(url);
		tblWechatMenu.setCreateTime(DateTime4J.getCurrentDateTime());
		return tblWechatMenu;
	}
}
