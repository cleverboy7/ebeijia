package com.ebeijia.service.wechat.inter;


import java.io.File;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ebeijia.entity.vo.wechat.kf.Kf;
import com.ebeijia.service.wechat.core.WechatTokenService;
import com.ebeijia.util.wechat.WechatUtil;

/** 
 * 客服管理器类 
 * @author zhicheng.xu
 * @date 2015-04-22
 */  
@Service("KfManager")
public class KfManagerImpl implements KfManager{  
  
	@Autowired
	private WechatTokenService wechatTokenService;
	
    /** 
     * 新增客服
     * @param Kf 客服对象
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
    public JSONObject createKf(Kf kf, String accessToken) {  
        // 拼装创建分组的url  
        String url = WechatUtil.KF_ADD.replace("ACCESS_TOKEN", accessToken);  
        // 将对象转换成json字符串  
        String jsonKf = JSONObject.fromObject(kf).toString();  
        JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", jsonKf);  
        return jsonObject;  
    }  
    
    /** 
     * 修改客服
     * @param Kf 客服对象
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
    public JSONObject updKf(Kf kf, String accessToken) {  
        // 拼装创建分组的url  
        String url = WechatUtil.KF_UPD.replace("ACCESS_TOKEN", accessToken);  
        // 将对象转换成json字符串  
        String jsonKf = JSONObject.fromObject(kf).toString();  
        JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", jsonKf);  
        return jsonObject;  
    }  
    /** 
     * 删除客服
     * @param account 客服账号
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
    public JSONObject delKf(String account, String accessToken) {  
        // 拼装创建分组的url  
        String url = WechatUtil.KF_DEL.replace("ACCESS_TOKEN", accessToken).replace("KFACCOUNT", account);  
        JSONObject jsonObject = wechatTokenService.httpRequest(url, "POST", null);  
        return jsonObject;  
    }  
    /** 
     * 上传客服头像
     * @param type 素材类型
     * @param f 文件对象 
     * @param ext 后缀
     * @param accessToken 有效的access_token 
     * @return JSONObject 
     */  
    public JSONObject upHeadKf(String accessToken,String type,File f,String ext) {  
        // 拼装创建分组的url  
        String url = WechatUtil.KF_UPHEAD.replace("ACCESS_TOKEN", accessToken);  
        JSONObject jsonObject = wechatTokenService.upload(url, accessToken, f,type,ext,null);
        return jsonObject;  
    }  
}  
